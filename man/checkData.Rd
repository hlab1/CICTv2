% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkData.R
\name{checkData}
\alias{checkData}
\title{Check validity of data}
\usage{
checkData(
  gene_expression_matrix = NULL,
  ground_truth = NULL,
  gene_association_matrix = NULL,
  rf_features = NULL,
  rf_outputs = NULL,
  gene_regulatory_network = NULL,
  in_data_obj = NULL,
  config_path = NULL,
  in_format = "separate",
  suppress_warnings = FALSE,
  ...
)
}
\arguments{
\item{gene_expression_matrix}{The gene expression matrix, where each row
represents a gene and each column represents a sample. A matrix or
DataFrame with numeric data.}

\item{ground_truth}{A DataFrame representing the ground-truth gene regulatory
network for model training and evaluation. Each row represents a
source-target relationship, with the source gene in the column labeled
\code{"src"} and the target gene in the column labeled \code{"trgt"}}

\item{gene_association_matrix}{The gene association matrix. A symmetric
matrix or DataFrame where each element is numeric and represents the raw
edge weight between two genes.}

\item{rf_features}{A tibble with features calculated from raw edge weights,
to be used in random forest training.}

\item{rf_outputs}{A DataFrame containing outputs from random forest training
and evaluation using CICT edge features.}

\item{gene_regulatory_network}{A gene regulatory network.}

\item{in_data_obj}{A list in the CICT data object format. Produced by a CICT
function.}

\item{config_path}{Path to the YAML config file.}

\item{in_format}{String indicating expected input format. \code{"separate"} if
passing inputs as separate arguments, \code{"data_obj"} if passing inputs
through \code{in_data_obj}, \code{"config"} if passing inputs through \code{config_path}.}

\item{...}{Other options}
}
\value{
A list in the CICT data object format, where fields for which valid
data were provided contain the input data and fields for which data
provided was invalid are null.
}
\description{
Checks if inputted data is either valid for use in CICT functions or is a
valid output of a CICT function. Valid data is returned in the CICT data
list. Invalid data has a null field in the list. Does not currently verify
\code{gene_association_matrix}, \code{rf_features}, \code{rf_outputs}, or
\code{gene_regulatory_network}.
}
\examples{
# separate inputs
checkData(gene_expression_matrix = SERGIO_DS4_gene_expression_matrix, ground_truth = SERGIO_DS4_ground_truth)

# input a data list
checkData(in_data_obj = checkData(gene_expression_matrix = SERGIO_DS4_gene_expression_matrix,
                        ground_truth = SERGIO_DS4_ground_truth),
          in_format = "data_obj")

# inputs from a config file
# create a config YAML file with absolute paths to data
write_yaml(list(gene_expression_matrix = system.file("extdata", "SERGIO_DS4_gene_expression_matrix.csv", package = "CICTv2", mustWork = TRUE),
                ground_truth = system.file("extdata", "SERGIO_DS4_ground_truth.csv", package = "CICTv2", mustWork = TRUE),
                gene_association_matrix = NULL,
                rf_features = NULL,
                rf_outputs = NULL,
                gene_regulatory_network = NULL),
           "/home/syz248/CICTv2/inst/extdata/SERGIO_DS4_config.yaml")
checkData(config_path = system.file("extdata", "SERGIO_DS4_config.yaml", package = "CICTv2", mustWork = TRUE), in_format = "config_file")
}
