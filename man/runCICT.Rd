% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runCICT.R
\name{runCICT}
\alias{runCICT}
\title{Driver for the CICT pipeline}
\usage{
runCICT(
  gene_expression_matrix = NULL,
  ground_truth = NULL,
  in_data_obj = NULL,
  config_path = NULL,
  in_format = "separate",
  ...
)
}
\arguments{
\item{gene_expression_matrix}{The gene expression matrix, where each row
represents a gene and each column represents a sample. A matrix or Data
Frame with numeric data.}

\item{ground_truth}{A Data Frame representing the ground-truth gene
regulatory network for model training and evaluation. Each row represents a
source-target relationship, with the source gene in the column labeled
\code{"src"} and the target gene in the column labeled \code{"trgt"}}

\item{in_data_obj}{A list in the CICT data object format. Produced by a CICT
function. Must contain \code{gene_expression_matrix} and \code{ground_truth} for the
driver to run.}

\item{config_path}{Path to the YAML config file. Config must contain paths to
the gene expression matrix and ground truth.}

\item{in_format}{String indicating expected input format. \code{"separate"} if
passing inputs through \code{gene_expression_matrix} and \code{ground_truth},
\code{"data_obj"} if passing inputs through \code{in_data_obj}, \code{"config"} if passing
inputs through \code{config_path}.}

\item{...}{Options to be passed to calculateRawEdges, prepareEdgeFeatures,
and/or predictEdges}
}
\value{
A list in the CICT data object format, with the data from each step
in the CICT pipeline. Contains \code{gene_expression_matrix}, \code{ground_truth},
\code{raw_edges}, \code{edge_features}, \code{model}, \code{model_assessment},
\code{predicted_edges}, and potentially other data.
}
\description{
Takes a gene expression matrix and a ground truth table, calculates raw
edges, prepares edge features, and uses a random forest model to predict a
gene regulatory network. Does not currently work in config mode.
}
\examples{
# separate inputs
runCICT(gene_expression_matrix = SERGIO_DS4_gene_expression_matrix, ground_truth = SERGIO_DS4_ground_truth)

# input a data list
runCICT(in_data_obj = checkData(gene_expression_matrix = SERGIO_DS4_gene_expression_matrix,
                        ground_truth = SERGIO_DS4_ground_truth),
          in_format = "data_obj")

# inputs from a config file
# create a config YAML file with absolute paths to data
yaml::write_yaml(list(gene_expression_matrix = system.file("extdata", "SERGIO_DS4_gene_expression_matrix.csv", package = "CICTv2", mustWork = TRUE),
                ground_truth = system.file("extdata", "SERGIO_DS4_ground_truth.csv", package = "CICTv2", mustWork = TRUE),
                gene_association_matrix = NULL,
                edge_features = NULL,
                model = NULL,
                model_assessment = NULL,
                predicted_edges = NULL),
           "/home/syz248/CICTv2/inst/extdata/SERGIO_DS4_config.yaml")
runCICT(config_path = system.file("extdata", "SERGIO_DS4_config.yaml", package = "CICTv2", mustWork = TRUE), in_format = "config_file")
}
